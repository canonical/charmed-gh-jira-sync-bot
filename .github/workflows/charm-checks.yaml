name: Quality Checks

on:
  push:
  pull_request:

jobs:
  codeql:
    name: CodeQL analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install astral-uv --classic
          cd .
          tox -e static

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install astral-uv --classic
          cd .
          tox -e lint

  lib-check:
    name: Check libraries
    runs-on: ubuntu-latest
    needs: [codeql, static-analysis, linting]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install charmcraft
        run: sudo snap install charmcraft --classic --channel="latest/stable"

      - name: Check charm libraries
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          cd "${{ inputs.charm-path }}"
          fetch_lib="$(charmcraft fetch-lib)"

          if echo "$fetch_lib" | grep -qE "not found in Charmhub|updated to version|has local changes"; then
            echo "Charm libraries are out of sync: please sync them"
            echo "$fetch_lib"
            exit 1
          else
            echo "Charm libraries are in sync."
          fi
    
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [codeql, static-analysis, linting, lib-check]
    env:
      CONCIERGE_JUJU_CHANNEL: stable
      CONCIERGE_MICROK8S_CHANNEL: 1.32-strict/stable
      CONCIERGE_CHARMCRAFT_CHANNEL: latest/stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo snap install concierge --classic
          sudo concierge prepare -p microk8s --extra-snaps=astral-uv
          sudo snap install kubectl --classic
          juju model-defaults automatically-retry-hooks=true

      - name: Run integration tests
        run: |
          cd .
          tox -e integration
